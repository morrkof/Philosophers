структура param (тут лежат инты - номер философа, время до смерти, время обеда, время спанья, номер обеда) и глобальные переменные - указатель на структуру философы (g_ph ( тут лежат два указателя на мьютексы - левая и правая вилка, ID, время до смерти, время спанья, время обеда, время последнего обеда, количество обедов и др - все инты )), указатель на мьютекс вилка, мьютекс смерти, поток th, инт full_ph, сайз_т begin_time.

мейн - гет аргс ( переписываем из аргв с помощью атои в структуру парам, отсекаем если аргц больше или меньше ) через аргц, аргв, указатель на парам.

создаём философов (функции alloc_mem ( выделяем память под глобалки - размер типов умноженный на количество философов ), init_forks ( в цикле на количество философов инициализируем мьютексы в глобалках g_fork[i] и один мьютекс под смерть), put_forks  ( в цикле по количеству философов приравниваем - левая рука равна вилке, правая вилке -1, также приравниваем все инты с временем из парам в глобалку с философами ) через параметры, принимаем возврат в i. в случае ошибки печатаем ошибку и освобождаем глобалки. 

Получаем время

Цикл по количеству фило, создаём потоки, старт в функции live.

live - бесконечный цикл:
	берем вилки (блок левой, принт статус, блок правой, принт статус. Либо наоборот, если он правша (чётные правши))
	едим (принт статус,  ждём)
	разблок вилки
	спим (принт статус, ждём)
	печатаем что фило думает

в конце функция observe с бесконечным циклом, которая проверяет по кругу всех фило и сравнивает время.
